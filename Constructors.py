import LoginManager
import tikapy
from System import Interfaces, Users, Services, Files, PackageManager, SystemMaintenance
from System import SystemClock, Certificates, Identity, AutoUpdate, Console, Health, History, LCD, LED
from System import Licence,Logging, NTPclient,NTPserver,ResetConfig, Resources, RouterBoard, Scheduller, Scripts, SpecialLogin
from System import UPS, WatchDog
from makeSupportFile import makeSupport
from Dude import Devices,Notifications, Probes, RosInfo, Services, Settings
from Tools import BwServer, BwTest, Email, FloodPing, Graphing, IpScan, MacServer, Netwatch, PacketSniffer, Ping, PingSpeed
from Tools import Profile, RoMon, SMS, Telnet, Torch, TrafficGenerator, TrafficMonitorList
from log import Log
from Radius import Radius
from Queues import SimpleQueues, QueueInterfaces, QueueTree, QueueTypes
from Routing import BFD, bgpInstance, bgpVRF, bgpPeer, bgpNetworks,bgpAfregates,VPNRoutes,bgpAdverisment, RoutingFilters
from  Routing import FIlterChains, FilterBGP, FilterActions, FilterBgpActions, IgmpProxy, MME, OspfInterface,OspfInstances
from Routing import OspfNetworks, OspfArea, OspfAreaRanges,OspfVirtualLink, OspfNeighbors, OspfNbmaNeighbor,OspfShamLinks
from Routing import OspfLsa, OspfRoutes,OspfAsBorderRouters,OspfAreaBorderRouters, RoutingFilters, RoutingFilterMatchers
from Routing import RoutingFilterBgp, RoutingFilterActions,PimSettings,PimInterfaces,PimRp,PimBsrCandidates,RpCandidate
from Routing import PimNeighbors, PimBsr,PimMRib,PimMfc, PimJoins,PimIgmpGroups,PrefixList, RipSettings, RipInterfaces
from Routing import RipNetworks, RipKeys, RipNeighbors, RipRoutes,RipNgSettings,RipNgInterface, RipNgRoutes
from MPLS import MplsSettings, MplsLdpSettings,MplsLdpInterface, MplsLdpNeighbor, MplsAcceptFilter, MplsAdvertiseFilter
from  MPLS import MplsForwardingTable,MplsInterface, MplsLocalBinding, MplsRemoteBindings
from MPLS import TrafficEngInterface,TrafficEngTunnelPath,TrafficEngPathState, TrafficEngResvState, TrafficEngTraffInterface
from MPLS import MplsVpls,MplsBgpVpls,MplsCiscoBgpVpls
from IPv6 import Ipv6Addresses, DHCPv6Client,DHCPrelay, DhcpServer, Pool, Ipv6NeighborDiscovery, Neighbors, IPv6Settings
from IPv6 import IPv6Route, FirewallFilter, FirewallGeneralSetup, FirewallAdvancedSetup, FirewallExtraSetup
from IPv6 import FirewallActions, FirewallConenctions,Ipv6AddressList, FirewallMangle, FirewallRaw
from IPv4 import Arp,Accounting, Addresses, DhcpCLient, DhcpRelay, DhcpServer, DNSglobal, DNScache, DNSstatic
from  IPv4 import FirewallFilter, FirewallNAT, FirewallMangle, FireallGeneralSetup, FirewallAdvancedSetup, FirewallExtraSetup
from IPv4 import  FirewallAction, FirewallServicePOrts, FirewallCOnnections, FirewallAddressist, FirewallL7Protocols


class Mikrotik:
    def __init__(self,username,password,address):
        self.username = "admin"
        self.password = 'admin'
        self.login = LoginManager.LoginManager( username, password )
        self.address = "172.16.53.2"
        self.interface = Interfaces.InterfaceManager( address, username, password )
        self.users = Users.Users( address, username, password )
        self.services = Services.Services( address, username, password )
        self.filesmanager = Files.Files( address, username, password )
        self.packages = PackageManager.PackageManager( address, username, password )
        self.system = SystemMaintenance.SystemMaintenance( address, username, password )
        self.clock = SystemClock.SystemClock( address, username, password )
        self.certs = Certificates.Certificates( address, username, password )
        self.host = Identity.Identity( address, username, password )
        self.update = AutoUpdate.AutoUpdate( address, username, password )
        self.console = Console.Console( address, username, password )
        self.helth = Health.Health( address, username, password )
        self.history = History.History( address, username, password )
        self.LCD = LCD.LCD( address, username, password )
        self.led = LED.LED( address, username, password )
        self.licence = Licence.Licence( address, username, password )
        self.log = Logging.Logging( address, username, password )
        self.ntpc = NTPclient.NTPclient( address, username, password )
        self.ntps = NTPserver.NTPserver( address, username, password )
        self.reset = ResetConfig.ResetConfig( address, username, password )
        self.resc = Resources.Resources( address, username, password )
        self.rbr = RouterBoard.RouterBoard( address, username, password )
        self.schd = Scheduller.Scheduller( address, username, password )
        self.scr = Scripts.Scripts( address, username, password )
        self.spl = SpecialLogin.SpecialLogin( address, username, password )
        self.ups = UPS.UPS( address, username, password )
        self.wdg = WatchDog.WatchDog( address, username, password )
        self.sup = makeSupport.makeSupport( address, username, password )
        self.dev = Devices.Devices( address, username, password )
        self.notif = Notifications.Notifications( address, username, password )
        self.probe = Probes.Probes( address, username, password )
        self.ros = RosInfo.RosInfo( address, username, password )
        self.serv = Services.Services( address, username, password )
        self.sett = Settings.Settings( address, username, password )
        self.bws = BwServer.BwServer( address, username, password )
        self.bwt = BwTest.BwTest( address, username, password )
        self.mail = Email.Email( address, username, password )
        self.fping = FloodPing.FloodPing( address, username, password )
        self.graf = Graphing.Graphing( address, username, password )
        self.ips = IpScan.IpScan( address, username, password )
        self.mac = MacServer.MacServer( address, username, password )
        self.nwc = Netwatch.Netwatch( address, username, password )
        self.sniff = PacketSniffer.PacketSniffer( address, username, password )
        self.ping = Ping.Ping( address, username, password )
        self.speed = PingSpeed.PingSpeed( address, username, password )
        self.prof = Profile.Profile( address, username, password )
        self.romon = RoMon.RoMon( address, username, password )
        self.SMS = SMS.SMS( address, username, password )
        self.torch = Torch.Torch( address, username, password )
        self.traff = TrafficGenerator.TrafficGenerator( address, username, password )
        self.mon = TrafficMonitorList.TrafficMonitorList( address, username, password )
        self.log = Log.Log( address, username, password )
        self.radius = Radius.Radius( address, username, password )
        self.queue = SimpleQueues.SimpleQueues( address, username, password )
        self.qiface = QueueInterfaces.QueueInterfaces( address, username, password )
        self.tree = QueueTree.QueueTree( address, username, password )
        self.qtypes = QueueTypes.QueueTypes( address, username, password )
        self.bfd = BFD.BFD(address,username,password)
        self.inst = bgpInstance.BGPInstance(address,username,password)
        self.vrf = bgpVRF.bgpVRF(address,username,password)
        self.peer=bgpPeer.bgpPeer(address,username,password)
        self.bnet=bgpNetworks.bgpNetworks(address,username,password)
        self.bagr = bgpAfregates.bgpAgregates(address,username,password)
        self.bvpn = VPNRoutes.VPNRoutes(address,username,password)
        self.badv = bgpAdverisment.bgpAdvertisment(address,username,password)
        self.filt = RoutingFilters.RoutingFilters(address,username,password)
        self.chain = FIlterChains.FilterChains(address,username,password)
        self.bgpfilter = FilterBGP.FilterBGP(address,username,password)
        self.bgpaction = FilterActions.FilterActions(address,username,password)
        self.bgpact = FilterBgpActions.FilterBgpActions(address,username,password)
        self.proxy = IgmpProxy.IgmpProxy(address,username,password)
        self.mme = MME.MME(address,username,password)
        self.oiface = OspfInterface.OspfInterface(address,username,password)
        self.oinstance = OspfInstances.OspfInstances(address,username,password)
        self.onet = OspfNetworks.OspfNetworks(address,username,password)
        self.oarea = OspfArea.OspfArea(address,username,password)
        self.orange = OspfAreaRanges.OspfAreaRanges(address,username,password)
        self.ovirt = OspfVirtualLink.OspfVirtualLinks(address,username,password)
        self.oneig = OspfNeighbors.OspfNeighbors(address,username,password)
        self.onbma = OspfNbmaNeighbor.OspfNbmaNeighbor(address,username,password)
        self.osham = OspfShamLinks.OspfShamLinks(address,username,password)
        self.olsa = OspfLsa.OspfLsa(address,username,password)
        self.oroute = OspfRoutes.OspfRoutes(address,username,password)
        self.oasrtr = OspfAsBorderRouters.OspfAsBorderRouters(address,username,password)
        self.oareartr = OspfAreaBorderRouters.OspfAreaBorderRouters(address,username,password)
        self.rflt = RoutingFilters.RoutingFilters(address,username,password)
        self.rfltmatch = RoutingFilterMatchers.RoutingFiltersMatchers(address,username,password)
        self.rfltbgp = RoutingFilterBgp.RoutingFilterBgp(address,username,password)
        self.rflact = RoutingFilterActions.RoutingFilterActions(address,username,password)
        self.pim = PimSettings.PimSettings(address,username,password)
        self.piface = PimInterfaces.PimInterfaces(address,username,password)
        self.prp = PimRp.PimRp(address,username,password)
        self.pbsrc = PimBsrCandidates.PimBsrCandidates(address,username,password)
        self.prpc = RpCandidate.RpCandidate(address,username,password)
        self.pbsr = PimBsr.BsrStats(address,username,password)
        self.pmrib = PimMRib.PimMRib(address,username,password)
        self.pmfc = PimMfc.PimMfc(address,username,password)
        self.pjoin = PimJoins.PimJoins(address,username,password)
        self.pigmp = PimIgmpGroups.PimIgmpGroups(address,username,password)
        self.pflist = PrefixList.PrefixList(address,username,password)
        self.rset = RipSettings.RipSettings(address,username,password)
        self.riface = RipInterfaces.RipInterfaces(address,username,password)
        self.rntw = RipNetworks.RipNetworks(address,username,password)
        self.rkey = RipKeys.RipKeys(address,username,password)
        self.rneig = RipNeighbors.RipNeighbors(address,username,password)
        self.rroute = RipRoutes.RipRoutes(address,username,password)
        self.rngset = RipNgSettings.RipNgSettings(address,username,password)
        self.rngiface = RipNgInterface.RipNgInterfaces(address,username,password)
        self.rngroute = RipNgRoutes.RipNgRoutes(address,username,password)
        self.mset = MplsSettings.MplsSettings(address,username,password)
        self.mldpset = MplsLdpSettings.MplsLdpSettings(address,username,password)
        self.mldpiface = MplsLdpInterface.MplsLdpInterface(address,username,password)
        self.mldpneig = MplsLdpNeighbor.MplsLdpNeighbors(address,username,password)
        self.mldpacceptfilter = MplsAcceptFilter.MplsLdpAcceptFilter(address,username,password)
        self.mldpadvertfilter = MplsAdvertiseFilter.MplsAdvertiseFilter(address,username,password)
        self.mfwtable = MplsForwardingTable.MplsForwardingTable(address,username,password)
        self.miface = MplsInterface.MplsInterface(address,username,password)
        self.mlbind = MplsLocalBinding.MplsLocalBinding(address,username,password)
        self.mrbind = MplsRemoteBindings.MplsRemoteBinding(address,username,password)
        self.teiface = TrafficEngInterface.TrafficEngInterface(address,username,password)
        self.tetunp = TrafficEngTunnelPath.TrafficEngTunnelPath(address,username,password)
        self.tepstate =TrafficEngPathState.TrafficEngPathState(address,username,password)
        self.terstate = TrafficEngResvState.TrafficEngResvState(address,username,password)
        self.tetriface = TrafficEngTraffInterface.TrafficEngTraffInterface(address,username,password)
        self.mvpls = MplsVpls.MplsVpls(address,username,password)
        self.mbgp = MplsBgpVpls.MplsBgpVpls(address,username,password)
        self.mcisco = MplsCiscoBgpVpls.MplsCiscoBgpVpls(address,username,password)
        self.ipv6add = Ipv6Addresses.Ipv6Addresses(address,username,password)
        self.dhcpv6c = DHCPv6Client.Dhcpv6Client(address,username,password)
        self.dhcpr = DHCPrelay.Dhcpv6Relay(address,username,password)
        self.dhcps = DhcpServer.DhcpServer(address,username,password)
        self.pool = Pool.Pool(address,username,password)
        self.ipv6nd = Ipv6NeighborDiscovery.IPv6NeighborDiscovery(address,username,password)
        self.ipv6neig = Neighbors.Neighbors(address,username,password)
        self.ipv6set = IPv6Settings.Settings(address,username,password)
        self.ipv6rt = IPv6Route.IPv6Route(address,username,password)
        self.ipv6fw1 = FirewallFilter.FirewallFilter(address,username,password)
        self.ipv6fw2 = FirewallGeneralSetup.FirewallGeneralSetup(address,username,password)
        self.ipv6fw3 = FirewallAdvancedSetup.FirewallAdvancedSetup(address,username,password)
        self.ipv6fw4 = FirewallExtraSetup.FirewallExtraSetup(address,username,password)
        self.ipv6fw5 = FirewallActions.FirewallActions(address,username,password)
        self.ipv6fw6 = FirewallConenctions.FirewallConnections(address,username,password)
        self.ipv6fw7 = Ipv6AddressList.FirewallAddressList(address,username,password)
        self.ipv6mangle = FirewallMangle.FirewallMangle(address,username,password)
        self.ipv6raw = FirewallRaw.FirewallRaw(address,username,password)
        self.arp = Arp.Arp(address,username,password)
        self.accouting = Accounting.Accounting(address,username,password)
        self.addresses = Addresses.Addresses(address,username,password)
        self.dhclient = DhcpCLient.DhcpClient(address,username,password)
        self.dhrelay = DhcpRelay.DhcpRelay(address,username,password)
        self.dhcpserver1 = DhcpServer.DhcpServer(address,username,password)
        self.dnsglob = DNSglobal.DNSglobal(address,username,password)
        self.dnscache = DNScache.DNScache(address,username,password)
        self.dnsstatic = DNSstatic.DNSstatic(address,username,password)
        self.fw1 = FirewallFilter.FirewallFilter(address,username,password)
        self.fw2 = FirewallNAT.FirewallNAT(address,username,password)
        self.fw3 = FirewallMangle.FirewallMangle(address,username,password)
        self.fw4 = FireallGeneralSetup.FirewallGeneralSetup(address,username,password)
        self.fw5 = FirewallAdvancedSetup.FirewallAdvancedSetup(address,username,password)
        self.fw6 = FirewallExtraSetup.FirewallExtraSetup(address,username,password)
        self.fw7 = FirewallAction.FirewallActions(address,username,password)
        self.fwservice = FirewallServicePOrts.FirewallServicePOrts(address,username,password)
        self.fwconn = FirewallCOnnections.FirewallConnections(address,username,password)
        self.fwaddr = FirewallAddressist.FirewallAddressList(address,username,password)
        self.fwl7 = FirewallL7Protocols.FirewallL7Protocols(address,username,password)